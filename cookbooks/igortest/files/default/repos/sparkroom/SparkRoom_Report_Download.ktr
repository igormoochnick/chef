<transformation>
  <info>
    <name>SparkRoom_Report_Download</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>&#47;sparkroom</directory>
    <parameters>
        <parameter>
            <name>OUT_FILE_NAME</name>
            <default_value>&#47;Users&#47;igor&#47;Downloads&#47;tmp_files&#47;sr.csv</default_value>
            <description/>
        </parameter>
        <parameter>
            <name>advertiserPassword</name>
            <default_value>pSAUqUvQ8GZc</default_value>
            <description/>
        </parameter>
        <parameter>
            <name>advertiserPercipioLoginKey</name>
            <default_value>Percipio</default_value>
            <description/>
        </parameter>
        <parameter>
            <name>advertiserUsername</name>
            <default_value>fjgoff</default_value>
            <description/>
        </parameter>
        <parameter>
            <name>reportLastDays</name>
            <default_value>1</default_value>
            <description/>
        </parameter>
    </parameters>
    <log>
<trans-log-table><connection/>
<schema/>
<table/>
<size_limit_lines/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STATUS</id><enabled>Y</enabled><name>STATUS</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name><subject/></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name><subject/></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name><subject/></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name><subject/></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name><subject/></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name><subject/></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>STARTDATE</id><enabled>Y</enabled><name>STARTDATE</name></field><field><id>ENDDATE</id><enabled>Y</enabled><name>ENDDATE</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>DEPDATE</id><enabled>Y</enabled><name>DEPDATE</name></field><field><id>REPLAYDATE</id><enabled>Y</enabled><name>REPLAYDATE</name></field><field><id>LOG_FIELD</id><enabled>Y</enabled><name>LOG_FIELD</name></field></trans-log-table>
<perf-log-table><connection/>
<schema/>
<table/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>SEQ_NR</id><enabled>Y</enabled><name>SEQ_NR</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>INPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>INPUT_BUFFER_ROWS</name></field><field><id>OUTPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>OUTPUT_BUFFER_ROWS</name></field></perf-log-table>
<channel-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>LOGGING_OBJECT_TYPE</id><enabled>Y</enabled><name>LOGGING_OBJECT_TYPE</name></field><field><id>OBJECT_NAME</id><enabled>Y</enabled><name>OBJECT_NAME</name></field><field><id>OBJECT_COPY</id><enabled>Y</enabled><name>OBJECT_COPY</name></field><field><id>REPOSITORY_DIRECTORY</id><enabled>Y</enabled><name>REPOSITORY_DIRECTORY</name></field><field><id>FILENAME</id><enabled>Y</enabled><name>FILENAME</name></field><field><id>OBJECT_ID</id><enabled>Y</enabled><name>OBJECT_ID</name></field><field><id>OBJECT_REVISION</id><enabled>Y</enabled><name>OBJECT_REVISION</name></field><field><id>PARENT_CHANNEL_ID</id><enabled>Y</enabled><name>PARENT_CHANNEL_ID</name></field><field><id>ROOT_CHANNEL_ID</id><enabled>Y</enabled><name>ROOT_CHANNEL_ID</name></field></channel-log-table>
<step-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>LOG_FIELD</id><enabled>N</enabled><name>LOG_FIELD</name></field></step-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
         <slaveserver><name>Local ETL Server</name><hostname>localhost</hostname><port>8081</port><webAppName/><username>cluster</username><password>Encrypted 2be98afc86aa7f2e4cb1aa265cd86aac8</password><proxy_hostname/><proxy_port/><non_proxy_hosts/><master>N</master></slaveserver>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
  <created_user>-</created_user>
  <created_date>2012&#47;12&#47;05 11:10:07.689</created_date>
  <modified_user>-</modified_user>
  <modified_date>2012&#47;12&#47;18 18:06:49.583</modified_date>
  </info>
  <notepads>
  </notepads>
  <order>
  <hop> <from>Auth</from><to>Download to CSV file</to><enabled>Y</enabled> </hop>  </order>
  <step>
    <name>Auth</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>

    <definitions>
        <definition>
        <class_type>TRANSFORM_CLASS</class_type>

        <class_name>Processor</class_name>

        <class_source><![CDATA[import org.apache.commons.httpclient.Cookie;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.HttpHost;
import org.apache.commons.httpclient.HttpState;
import org.apache.commons.httpclient.NameValuePair;
import org.apache.commons.httpclient.cookie.CookieSpecBase;
import org.apache.commons.httpclient.methods.GetMethod;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.util.EncodingUtil;

private String url = "https://leadiq.sparkroom.com/Sparkroom/Sparkroom/security/auth";

public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException
{
	first = false;

	int http_status_code = 0;
	String http_response = "";
	String authCookie = "";

	try {	
		HttpClient httpclient = new HttpClient();
			
		PostMethod method = new PostMethod(url);

		method.addRequestHeader("Content-Type","text/x-gwt-rpc; charset=utf-8");
		method.addRequestHeader("X-GWT-Permutation", "526AD6415234921DF21D9E17A480DAAD");

		String advertiserUsername = getVariable("advertiserUsername", "fjgoff");
		String advertiserPassword = getVariable("advertiserPassword", "pSAUqUvQ8GZc");
		String advertiserPercipioLoginKey = getVariable("advertiserPercipioLoginKey", "Percipio");

		String payload = "7|0|8|https://leadiq.sparkroom.com/Sparkroom/Sparkroom/|9B088E38106A1592E5A5A7D25C68BA2B|com.sparkroom.core.gwt.main.rpc.auth.AuthRPC|authenticate|java.lang.String/2004016611|" 
						+ advertiserUsername + "|" + advertiserPassword + "|" + advertiserPercipioLoginKey 
						+ "|1|2|3|4|3|5|5|5|6|7|8|";

		method.setRequestBody(payload);
			
		http_status_code = httpclient.executeMethod( method );
		logBasic("Status: " + http_status_code);
		String http_status_text = method.getStatusText();
		http_response = method.getResponseBodyAsString();
		logBasic("Body: " + http_response);

		method.releaseConnection();
			
		logBasic("HTTP Response: " + http_response);

		// avoid dividing by 0
		//if (http_status_code != 200){
			// putErros is declared as follows:
			// public void putError(RowMetaInterface rowMeta, Object[] row, long nrErrors, String errorDescriptions, String fieldNames, String errorCodes)
			//putError(data.outputRowMeta, r, 1, "Denominator must be different from 0", "denominator", "DIV_0");
			// get on with the next line
			//return true;
		//}

		if (http_status_code == 200) {
			HttpState httpState = httpclient.getState();

			Cookie[] cookieSpec = new CookieSpecBase().match("leadiq.sparkroom.com", 80, "/Sparkroom", true, httpState.getCookies());

			Cookie cookie = cookieSpec[0];
			authCookie = cookie.getValue();
		}
	}
	catch (Throwable th) {
		th.printStackTrace();
	}

	// create a row
	Object[] r = RowDataUtil.allocateRowData(data.outputRowMeta.size());
    
    // Set key and value in a new output row
    get(Fields.Out, "httpBodyResult").setValue(r, http_response);
    get(Fields.Out, "httpStatus").setValue(r, Long.valueOf(http_status_code));
	get(Fields.Out, "authCookie").setValue(r, authCookie);

	// Send the row on to the next step.
    putRow(data.outputRowMeta, r);

	setOutputDone();
	return false;
}

]]></class_source>
        </definition>
    </definitions>
    <fields>
        <field>
        <field_name>httpBodyResult</field_name>

        <field_type>String</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>httpStatus</field_name>

        <field_type>Integer</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>authCookie</field_name>

        <field_type>String</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
    </fields><clear_result_fields>N</clear_result_fields>
<info_steps></info_steps><target_steps></target_steps><usage_parameters></usage_parameters>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>216</xloc>
      <yloc>147</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Download to CSV file</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>

    <definitions>
        <definition>
        <class_type>TRANSFORM_CLASS</class_type>

        <class_name>Processor</class_name>

        <class_source><![CDATA[import org.apache.commons.httpclient.*;
import org.apache.commons.httpclient.cookie.CookieSpecBase;
import org.apache.commons.httpclient.methods.*;
import org.apache.commons.httpclient.util.EncodingUtil;
import org.apache.commons.io.*;
import java.io.*;
import java.util.*;
import java.text.*;

private String url = "https://leadiq.sparkroom.com/Sparkroom/sparkroom/servlet/leadexport";

public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException
{
	Object[] r = getRow();

	if (r == null) {
		setOutputDone();
		return false;
	}

    if (first){
        first = false;
    }

    String outFileName = getVariable("OUT_FILE_NAME", "/tmp/some_file.csv");
	logBasic("Output file: " + outFileName);

    r = createOutputRow(r, data.outputRowMeta.size());
	
    // Get the value from an input field
    String authCookie = get(Fields.In, "authCookie").getString(r);

	int http_status_code = 0;

	try {	
		HttpClient httpclient = new HttpClient();
			
		PostMethod method = new PostMethod(url);

		method.addRequestHeader("Content-Type", "application/x-www-form-urlencoded");
		method.addRequestHeader("Cookie", "JSESSIONID=" + authCookie + "; sparkroom.build.version=4062");

		String reportLastDays = getVariable("reportLastDays", "1");

		Calendar calendar = Calendar.getInstance();
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
		Date today = calendar.getTime();
		calendar.add(Calendar.DATE, 0 - Integer.parseInt(reportLastDays));
		Date startDte = calendar.getTime();
		String startDate = dateFormat.format(calendar.getTime());
		String endDate = dateFormat.format(today);
		logBasic("Downloading date range From: " + startDate + " To: " + endDate);

		String payload = "serializedCriteria=%26queryDate%3DreceivedDate%26fromDate0%3D" + startDate + "%26toDate0%3D" + endDate + "%26isLeadProvider%3Dtrue%26searchTerm%3D%26contactMethodContains%3D%26leadProviderAffiliate%3D%26leadProviderIdsForChannels%3D&utf8char=%E8%92%82&isXls=false&exportFields=all";

		method.setRequestBody(payload);
			
		http_status_code = httpclient.executeMethod( method );
		logBasic("Status: " + http_status_code);

		if (http_status_code == 200) {
			logBasic("Saving HTTP Response");
			InputStream inStream = method.getResponseBodyAsStream();

			// write the inputStream to a FileOutputStream
			OutputStream outStream = new FileOutputStream(new File(outFileName));

			IOUtils.copy(inStream, outStream);

			inStream.close();
			outStream.flush();
			outStream.close();
		}
		else {
			putError(data.outputRowMeta, r, 1, "Failed to download the data", "value", "ERR:001");
			setErrors(1);
			setOutputDone();
			return false;
		}

		method.releaseConnection();
			
		//logBasic("HTTP Response: " + http_response);
	}
	catch (Throwable th) {
		th.printStackTrace();
		logBasic("ERROR: " + th.getMessage());
	}
    
    // Set key and value in a new output row
    //get(Fields.Out, "httpBodyResult").setValue(r, http_response);
    get(Fields.Out, "httpStatus").setValue(r, Long.valueOf(http_status_code));

	// Send the row on to the next step.
    putRow(data.outputRowMeta, r);

	return true;
}

]]></class_source>
        </definition>
    </definitions>
    <fields>
    </fields><clear_result_fields>N</clear_result_fields>
<info_steps></info_steps><target_steps></target_steps><usage_parameters></usage_parameters>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>332</xloc>
      <yloc>146</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step_error_handling>
  </step_error_handling>
   <slave-step-copy-partition-distribution>
</slave-step-copy-partition-distribution>
   <slave_transformation>N</slave_transformation>
</transformation>
